-- @formatter:off
import 'app_database.dart';
-- @formatter:on

-- get all entries in a game
entriesInGame AS EntryInGame:
SELECT entry.id,
       game,
       player    AS playerId,
       p.pseudo  AS playerName,
       with1     AS with1Id,
       w1.pseudo AS with1Name,
       with2     AS with2Id,
       w2.pseudo AS with2Name,
       points,
       points_for_attack,
       petit_au_bout,
       poignee,
       prise,
       nb_bouts
FROM info_entries       entry
LEFT OUTER JOIN players p ON p.id = entry.player
LEFT OUTER JOIN players w1 ON w1.id = entry.with1
LEFT OUTER JOIN players w2 ON w2.id = entry.with2
WHERE entry.game = :gameId;

-- get a specific entry
entry AS EntryInGame:
SELECT entry.id,
       game,
       player    AS playerId,
       p.pseudo  AS playerName,
       with1     AS with1Id,
       w1.pseudo AS with1Name,
       with2     AS with2Id,
       w2.pseudo AS with2Name,
       points,
       points_for_attack,
       petit_au_bout,
       poignee,
       prise,
       nb_bouts
FROM info_entries       entry
LEFT OUTER JOIN players p ON p.id = entry.player
LEFT OUTER JOIN players w1 ON w1.id = entry.with1
LEFT OUTER JOIN players w2 ON w2.id = entry.with2
WHERE entry.id = :entryId;

allGamesWithPlayer AS GameWithPlayerResult:
SELECT g.id     AS gameId,
       g.nb_players,
       g.date,
       p.id     AS playerId,
       p.pseudo AS playerName
FROM games              g
INNER JOIN player_games pg ON pg.game = g.id
INNER JOIN players      p ON pg.player = p.id;

gameWithPlayer AS GameWithPlayerResult:
SELECT g.id     AS gameId,
       g.nb_players,
       g.date,
       p.id     AS playerId,
       p.pseudo AS playerName
FROM games              g
INNER JOIN player_games pg ON g.id = pg.game
INNER JOIN players      p ON p.id = pg.player
WHERE g.id = :gameId;
